[dataset.selectbox]
label = 'Dataset to use (dataset)'
options = ["cifar10", "lsun", "imagenet", "folder", "lfw", "fake", "mnist"]

[data_path.text_input]
label = 'Dataset path (data_path)'
value = './'

[filepath.text_input]
label = 'Logging file path (filepath)'
value = './logs'

[saved_G.text_input]
label = 'Path to saved generator (saved_G)'
value = '.'

[saved_D.text_input]
label = 'Path to saved discriminator (saved_D)'
value = '.'

[batch_size.number_input]
label = 'Train batch size (batch_size)'
min_value = 0
value = 4

[num_workers.number_input]
label = 'Number of workers (num_workers)'
min_value = 0
value = 2

[max_epochs.number_input]
label = 'Maximum epochs to train (max_epochs)'
min_value = 1
value = 2

[lr.number_input]
label = 'Learning rate used by torch.optim.* (lr)'
min_value = 0.0
value = 1e-3
format = '%e'

[log_train.number_input]
label = 'Logging interval of training iterations (log_train)'
min_value = 0
value = 50

[seed.number_input]
label = 'Seed used in ignite.utils.manual_seed() (seed)'
min_value = 0
value = 666

[nproc_per_node.number_input]
label = 'Number of processes to launch on each node (nproc_per_node)'
min_value = 1

[nnodes.number_input]
label = 'Number of nodes to use for distributed training (nnodes)'
min_value = 1

[node_rank.number_input]
label = 'Rank of the node for multi-node distributed training (node_rank)'
min_value = 0

[master_addr.text_input]
label = 'Master node TCP/IP address for torch native backends (master_addr)'
value = "'127.0.0.1'"

[master_port.number_input]
label = 'Master node port for torch native backends (master_port)'
value = 8080

[n_saved.number_input]
label = 'Number of best models to store (n_saved)'
min_value = 1
value = 2

[z_dim.number_input]
label = 'Size of the latent z vector (z_dim)'
value = 100

[alpha.number_input]
label = 'Running average decay factor (alpha)'
value = 0.98

[g_filters.number_input]
label = 'Number of filters in the second-to-last generator deconv layer (g_filters)'
value = 64

[d_filters.number_input]
label = 'Number of filters in first discriminator conv layer (d_filters)'
value = 64

[beta_1.number_input]
label = 'beta_1 for Adam optimizer (beta_1)'
value = 0.5
